package common.utility;

import java.util.Scanner;

/**
 * Интерфейс консоли для ввода команд и вывода результата.
 * Определяет методы для взаимодействия с пользователем, вывода сообщений, ошибок, таблиц, а также получения и обработки пользовательского ввода различных типов.
 */
public interface Console {
    /**
     * Выводит объект в стандартный поток вывода без перехода на новую строку.
     *
     * @param obj объект для вывода
     */
    void print(Object obj);

    /**
     * Выводит объект в стандартный поток вывода с переходом на новую строку.
     *
     * @param obj объект для вывода
     */
    void println(Object obj);

    /**
     * Считывает строку, введённую пользователем.
     *
     * @return введённая строка
     */
    String readln();

    /**
     * Проверяет, возможно ли считать строку из текущего источника ввода.
     *
     * @return true, если возможно считать строку, иначе false
     */
    boolean isCanReadln();

    /**
     * Выводит сообщение об ошибке в поток ошибок.
     *
     * @param obj объект для вывода ошибки
     */
    void printError(Object obj);

    /**
     * Выводит таблицу, используя два объекта (например, для форматированного вывода данных).
     *
     * @param obj1 первый объект
     * @param obj2 второй объект
     */
    void printTable(Object obj1, Object obj2);

    /**
     * Запрашивает у пользователя строковое значение с сообщением-подсказкой.
     *
     * @param mess сообщение-подсказка
     * @return введённая строка
     */
    String getUserValueString(String mess);

    /**
     * Запрашивает у пользователя значение типа Float с сообщением-подсказкой.
     *
     * @param mess сообщение-подсказка
     * @return введённое значение Float или null, если не задано
     */
    Float getUserValueFloat(String mess);

    /**
     * Запрашивает у пользователя значение типа Double с сообщением-подсказкой.
     *
     * @param mess сообщение-подсказка
     * @return введённое значение Double или null, если не задано
     */
    Double getUserValueDouble(String mess);

    /**
     * Запрашивает у пользователя значение типа Long с сообщением-подсказкой.
     *
     * @param mess сообщение-подсказка
     * @return введённое значение Long или null, если не задано
     */
    Long getUserValueLong(String mess);

    /**
     * Выводит приглашение к вводу команды.
     */
    void prompt();

    /**
     * Возвращает строку-приглашение для ввода команды.
     *
     * @return строка-приглашение
     */
    String getPrompt();

    /**
     * Переключает источник ввода на сканер файла.
     *
     * @param obj объект Scanner для чтения из файла
     */
    void selectFileScanner(Scanner obj);

    /**
     * Переключает источник ввода на стандартную консоль.
     */
    void selectConsoleScanner();
}